
{
	"info": {
		"name": "MongoDB Service Unit Tests",
		"_postman_id": "8f3b9d9a-0000-4b2b-9f3c-000000000000",
		"description": "Collection to test the MongoDB service endpoints for LeadFlow",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:12000/api/mongodb-service/",
					"protocol": "http",
					"host": [
						"127.0.0.1"
					],
					"port": "12000",
					"path": [
						"api",
						"mongodb-service",
						""
					]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('status is 200', function () { pm.response.to.have.status(200); });",
							"pm.test('body has message', function () { var json = pm.response.json(); pm.expect(json.message).to.eql('MongoDB Service is running'); });"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Add Bucket",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"bucket_name\": \"Test Bucket\"\n}"
				},
				"url": {
					"raw": "http://127.0.0.1:12000/api/mongodb-service/buckets/add-bucket?bucket_name=Test%20Bucket",
					"protocol": "http",
					"host": [
						"127.0.0.1"
					],
					"port": "12000",
					"path": [
						"api",
						"mongodb-service",
						"buckets",
						"add-bucket"
					],
					"query": [
						{
							"key": "bucket_name",
							"value": "Test Bucket"
						}
					]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('status is 201', function () { pm.response.to.have.status(201); });",
							"var json = pm.response.json();",
							"pm.test('response has bucket', function () { pm.expect(json.bucket).to.be.an('object'); });",
							"if (json.bucket && json.bucket.bucketId) { pm.collectionVariables.set('bucketId', json.bucket.bucketId); }"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Get All Buckets",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:12000/api/mongodb-service/buckets/get-all-buckets",
					"protocol": "http",
					"host": [
						"127.0.0.1"
					],
					"port": "12000",
					"path": [
						"api",
						"mongodb-service",
						"buckets",
						"get-all-buckets"
					]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('status is 200', function () { pm.response.to.have.status(200); });",
							"var json = pm.response.json();",
							"pm.test('buckets is array', function () { pm.expect(json.buckets).to.be.an('array'); });",
							"pm.test('contains created bucket', function () { var id = pm.collectionVariables.get('bucketId'); var found = Array.isArray(json.buckets) && json.buckets.some(function (b) { return b.bucketId === id; }); pm.expect(found).to.be.true; });"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Update Bucket Name",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"bucket_id\": \"{{bucketId}}\",\n  \"bucket_name\": \"Renamed Bucket\"\n}"
				},
				"url": {
					"raw": "http://127.0.0.1:12000/api/mongodb-service/buckets/update-bucket-name?bucket_id={{bucketId}}&bucket_name=Renamed%20Bucket",
					"protocol": "http",
					"host": [
						"127.0.0.1"
					],
					"port": "12000",
					"path": [
						"api",
						"mongodb-service",
						"buckets",
						"update-bucket-name"
					],
					"query": [
						{
							"key": "bucket_id",
							"value": "{{bucketId}}"
						},
						{
							"key": "bucket_name",
							"value": "Renamed Bucket"
						}
					]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('status is 200', function () { pm.response.to.have.status(200); });",
							"var json = pm.response.json();",
							"pm.test('bucket name updated', function () { pm.expect(json.bucketName).to.eql('Renamed Bucket'); });"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Add Lead",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"url\": \"https://example.com/profile/1\",\n  \"username\": \"example_user\",\n  \"platform\": \"LinkedIn\",\n  \"status\": \"new\",\n  \"bucket_id\": \"{{bucketId}}\",\n  \"notes\": \"Initial lead\"\n}"
				},
				"url": {
					"raw": "http://127.0.0.1:12000/api/mongodb-service/leads/add-lead?url=https%3A%2F%2Fexample.com%2Fprofile%2F1&username=example_user&platform=LinkedIn&status=new&bucket_id={{bucketId}}&notes=Initial%20lead",
					"protocol": "http",
					"host": [
						"127.0.0.1"
					],
					"port": "12000",
					"path": [
						"api",
						"mongodb-service",
						"leads",
						"add-lead"
					],
					"query": [
						{ "key": "url", "value": "https://example.com/profile/1" },
						{ "key": "username", "value": "example_user" },
						{ "key": "platform", "value": "LinkedIn" },
						{ "key": "status", "value": "new" },
						{ "key": "bucket_id", "value": "{{bucketId}}" },
						{ "key": "notes", "value": "Initial lead" }
					]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('status is 201', function () { pm.response.to.have.status(201); });",
							"var json = pm.response.json();",
							"pm.test('response has lead', function () { pm.expect(json.lead).to.be.an('object'); });",
							"if (json.lead && json.lead.leadId) { pm.collectionVariables.set('leadId', json.lead.leadId); }"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Get All Leads",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:12000/api/mongodb-service/leads/get-all-leads?bucket_id={{bucketId}}",
					"protocol": "http",
					"host": [
						"127.0.0.1"
					],
					"port": "12000",
					"path": [
						"api",
						"mongodb-service",
						"leads",
						"get-all-leads"
					],
					"query": [
						{ "key": "bucket_id", "value": "{{bucketId}}" }
					]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('status is 200', function () { pm.response.to.have.status(200); });",
							"var json = pm.response.json();",
							"pm.test('leads is array', function () { pm.expect(json.leads).to.be.an('array'); });",
							"pm.test('contains our lead', function () { var found = json.leads.some(function(l){ return l.leadId === pm.collectionVariables.get('leadId'); }); pm.expect(found).to.be.true; });"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Update Lead Status",
			"request": {
				"method": "PUT",
				"header": [
					{ "key": "Content-Type", "value": "application/json" }
				],
				"body": { "mode": "raw", "raw": "{\n  \"lead_id\": \"{{leadId}}\",\n  \"status\": \"contacted\"\n}" },
				"url": {
					"raw": "http://127.0.0.1:12000/api/mongodb-service/leads/update-lead-status?lead_id={{leadId}}&status=contacted",
					"protocol": "http",
					"host": ["127.0.0.1"],
					"port": "12000",
					"path": ["api","mongodb-service","leads","update-lead-status"],
					"query": [ { "key": "lead_id", "value": "{{leadId}}" }, { "key": "status", "value": "contacted" } ]
				}
			},
			"event": [ { "listen": "test", "script": { "exec": [ "pm.test('status is 200', function () { pm.response.to.have.status(200); });", "var json = pm.response.json();", "pm.test('status updated', function () { pm.expect(json.status).to.eql('contacted'); });" ], "type": "text/javascript" } } ]
		},
		{
			"name": "Update Lead Notes",
			"request": {
				"method": "PUT",
				"header": [ { "key": "Content-Type", "value": "application/json" } ],
				"body": { "mode": "raw", "raw": "{\n  \"lead_id\": \"{{leadId}}\",\n  \"notes\": \"Followed up via email\"\n}" },
				"url": {
					"raw": "http://127.0.0.1:12000/api/mongodb-service/leads/update-lead-notes?lead_id={{leadId}}&notes=Followed%20up%20via%20email",
					"protocol": "http",
					"host": ["127.0.0.1"],
					"port": "12000",
					"path": ["api","mongodb-service","leads","update-lead-notes"],
					"query": [ { "key": "lead_id", "value": "{{leadId}}" }, { "key": "notes", "value": "Followed up via email" } ]
				}
			},
			"event": [ { "listen": "test", "script": { "exec": [ "pm.test('status is 200', function () { pm.response.to.have.status(200); });", "var json = pm.response.json();", "pm.test('notes updated', function () { pm.expect(json.notes).to.eql('Followed up via email'); });" ], "type": "text/javascript" } } ]
		},
		{
			"name": "Delete Bucket",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:12000/api/mongodb-service/buckets/delete-bucket?bucket_id={{bucketId}}",
					"protocol": "http",
					"host": ["127.0.0.1"],
					"port": "12000",
					"path": ["api","mongodb-service","buckets","delete-bucket"],
					"query": [ { "key": "bucket_id", "value": "{{bucketId}}" } ]
				}
			},
			"event": [ { "listen": "test", "script": { "exec": [ "pm.test('status is 200', function () { pm.response.to.have.status(200); });", "var json = pm.response.json();", "pm.test('bucket deleted', function () { pm.expect(json.bucketId).to.eql(pm.collectionVariables.get('bucketId')); });" ], "type": "text/javascript" } } ]
		}
	],
	"event": [],
	"variable": []
}
